# Simple workflow for deploying static content to GitHub Pages
name: Deploy Storybook and snapshot to Github Pages

on:
  # Runs on pushes, ignoring the main branch
  push:
    branches-ignore: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    name: My first job
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}/12345
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true # Fetches LFS data

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Build storybook
        run: yarn build-storybook

      - name: Copy specific directory
        run: |
          # Create a directory to copy your files
          branch_base=tmp/deploy/branch/${{ github.ref_name }}
          mkdir -p $branch_base/report

          # add git lfs to repo
          echo "
          deploy/** filter=lfs diff=lfs merge=lfs -text" >> tmp/.gitattributes

          # Generate a timestamp and store it in a file
          timestamp=$(date +%s)
          echo $timestamp > $branch_base/timestamp.txt

          cp -r storybook-static/* $branch_base
          cp -r .storybook/__snapshots__/* $branch_base/report

          shopt -s extglob 
          rm -rf -- !("tmp")
        working-directory: ${{ github.workspace }}

      - name: Check for & remove stale branches
        run: |
          current_branch=${{ github.ref_name }}
          git checkout -b gh-pages
          base_directory="./deploy/branch"
          ignore_assets=""
          # Use find to locate directories (including subdirectories)
          # -type d specifies that we're looking for directories
          # -print0 and -0 ensure that directory names with spaces are handled correctly
          find "$base_directory" -type d -print0 | while IFS= read -d $'\0' directory; do

              timestamp_file=timestamp.txt
              file_path="$directory/$timestamp_file"
              # Check if the file exists
              if [ -e "$directory/$timestamp_file" ]; then
                  # Calculate the timestamp for two months ago
                  two_month_ago=$(( $(date +%s) - 60*24*3600 ))  # 60 days * 24 hours * 3600 seconds
                  # Retrieve the timestamp from the file
                  branch_timestamp=$(cat $timestamp_file)    
                  if [ "$branch_timestamp" -lt "$two_month_ago" ]; then
                      echo "Removing stale branch: $directory"
                      # rm -rf $directory
                      ignore_assets+=$directory
                  fi
              else
                continue
              fi
          done
          echo "ignore_assets=ignore_assets" >> $GITHUB_OUTPUT

          # git remote rm origin
          # git remote add origin ${{ secrets.GITHUB_TOKEN }}@github.com/krobiag/viz-reg-test.git
          # git add --all
          # git config user.email "firstname.lastname@iag.com.au"
          # git config user.name "Firstname Lastname"
          # git commit -m "remove stale branches"
          # push origin gh-pages

      - name: Add to gh-pages repo
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: tmp
          keep_files: true

      - name: Checkout gh-pages
        uses: actions/checkout@v4
        with:
          lfs: true # Fetches LFS data
          ref: gh-pages

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: deploy123

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
