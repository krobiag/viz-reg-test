# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI
on:
  push:
    branches: ["develop"]
  pull_request:
    branches: ["develop"]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      # - name: Create New Branch
      #   run: |
      #     # Define the new branch name (e.g., feature/branch-name)
      #     NEW_BRANCH_NAME="feature/your-branch-name"

      #     # Create the new branch from the current commit
      #     git checkout -b "$NEW_BRANCH_NAME"

      #     # Push the new branch to the remote repository
      #     git push origin "$NEW_BRANCH_NAME"
      - run: yarn -v
      - name: Install dependencies
        run: yarn --frozen-lockfile
      # - name: Test create branch
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: node ${{ github.workspace }}/dev-tools/github/createBranch.js
      # - name: Build Storybook
      #   run: yarn build-storybook --quiet
      - name: Serve Storybook and run tests
        run: yarn storybook &

      - name: Start server
        # run: node ${{ github.workspace }}/dev-tools/server/index.js
        run: npx http-server ${{ github.workspace }}/dev-tools/server/index.js --port 3000 &
      # - run: echo "Run script at "
      - name: Start tests ${{ github.workspace }}/dev-tools/snapshot-all.js
        run: node ${{ github.workspace }}/dev-tools/snapshot-all.js &

      # - name: Setup Pages
      #   uses: actions/configure-pages@v3
      # - name: Upload artifact
      #   uses: actions/upload-pages-artifact@v2
      #   with:
      #     path: "./storybook-static"
      # - name: Deploy to GitHub Pages
      #   id: deployment
      #   uses: actions/deploy-pages@v2
      # - name: Serve Storybook and run tests
      #   run: npx http-server storybook-static --port 6006 --silent
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # - name: Start the server
      #   run: npx concurrently "yarn server" "node ${{ github.workspace }}/dev-tools/snapshot-all.js"
      # run: |
      #   npx concurrently --kill-others \
      #     "storybook dev -p 6006" \
      #     "node ${{ github.workspace }}/dev-tools/github/createBranch.js"

      # npx concurrently --kill-others \"storybook dev -p 6006\" \"node ${{ github.workspace }}/dev-tools/github/createBranch.js\"
      # run: |
      #   npx concurrently -k -s first -n "SB,TEST" -c "magenta,blue" \
      #     "npx http-server storybook-static --port 6006 --silent" \
      #     "npx wait-on tcp:6006 && yarn test-storybook"
      #     # - name: Start Storybook in dev
      #     #   run: yarn storybook
      # - name: Visual Regression
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: node ${{ github.workspace }}/dev-tools/github/createBranch.js
      # - name: List files in the repository
      #   run: |
      #     ls ${{ github.workspace }}/.loki/difference
  #     # - run: npm ci
  #     # - run: npm run build --if-present
  #     # - run: npm test
  # deploy:
  #   environment:
  #     name: github-pages
  #     url: ${{ steps.deployment.outputs.page_url }}
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #     - run: npm ci
  #     - run: npm run build-storybook
  #     - name: Setup Pages
  #       uses: actions/configure-pages@v3
  #     - name: Upload artifact
  #       uses: actions/upload-pages-artifact@v2
  #       with:
  #         path: "./storybook-static"
  #     - name: Deploy to GitHub Pages
  #       id: deployment
  #       uses: actions/deploy-pages@v2
  # Create-Branch:
  #   name: Create Branch
  #   runs-on: ubuntu-latest
  #   # needs:
  #   #   - build
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Test create branch
  #       run: node ${{ github.workspace }}/createBranch.js
  # - name: Checkout code
  #   uses: actions/checkout@v2
  # - name: Create Branch
  #   id: create_branch
  #   uses: lablnet/create-branch-from-tag@v1
  #   env:
  #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
  #   with:
  #     tag_name: ${{ github.ref }}/testme
  #     owner: ${{ github.repository_owner }} # https://docs.github.com/en/actions/learn-github-actions/contexts#example-contents-of-the-github-context
  #     repo: ${{ github.event.repository.name }} # https://www.reddit.com/r/github/comments/tjkj6f/get_repo_name_on_github_actions_without_owner/
